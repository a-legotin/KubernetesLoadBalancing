apiVersion: apps/v1
kind: Deployment
metadata:
  name: kldemo-web-deployment
  namespace: ezlab-load-balancing-demo
  labels:
    app: kldemo
spec:
  selector:
    matchLabels:
      app: kldemo-web
  replicas: 2
  template:
    metadata:
      labels:
        app: kldemo-web
    spec:
      containers:
        - name: kldemo-web
          image: registry.ezlab.ru/ezlab/kubernetesloadbalancing:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
      imagePullSecrets:
        - name: registry-credentials
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: ezlab-load-balancing-demo
data:
  proxy.conf: |
    proxy_redirect          off;
    proxy_http_version      1.1;
    proxy_set_header        Upgrade             $http_upgrade;
    proxy_cache_bypass      $http_upgrade;
    proxy_set_header        Connection          keep-alive;
    proxy_set_header        Host $host;
    proxy_set_header        X-Real-IP           $remote_addr;
    proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto   $scheme;
    proxy_set_header        X-Forwarded-Host    $server_name;

  nginx.conf: |
    user nginx;

    worker_processes    auto;

    events { worker_connections 1024; }

    http {
        include             /etc/nginx/proxy.conf;
        include             /etc/nginx/mime.types;
        server_tokens       off;
        sendfile            on;

        upstream webapi {
            server          kldemo-web:8080;
        }

        server {
            listen          80;
            server_name     $hostname;

            location / {
                proxy_pass  http://webapi;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kldemo-nginx-deployment
  namespace: ezlab-load-balancing-demo
  labels:
    app: kldemo
spec:
  selector:
    matchLabels:
      app: kldemo-nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: kldemo-nginx
    spec:
      containers:
        - name: nginx
          image: nginx
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: nginx-conf
              mountPath: /etc/nginx/proxy.conf
              subPath: proxy.conf
              readOnly: true
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
              - key: proxy.conf
                path: proxy.conf